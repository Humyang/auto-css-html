{"version":3,"sources":["webpack:///src/view/plan/index.vue","webpack:///./src/view/plan/index.vue?4794","webpack:///./src/view/plan/index.vue"],"names":["Date","prototype","Format","fmt","replace","RegExp","$1","this","getFullYear","substr","length","o","k","plan","end","value","m","d","h","mm","s","_ref","row","getTime","endAt","item","remainMinu","_this","type","getPlanList","submit","nowTime","keyPath","_this2","query_options","then","res","data","bCreateAt","startAt","cData","refreshRemainTime","_this3","token","now","view_plan","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","height","_v","_s","_f","currentTime","on","click","$event","showAddTask","ref","model","form","action","method","placeholder","callback","$$v","expression","_l","key","label","align","unlink-panels","range-separator","start-placeholder","end-placeholder","picker-options","pickerOptions2","selectedTime","actionQuery","staticStyle","width","tableData","row-class-name","tableRowClassName","prop","scopedSlots","_u","fn","scope","command","actionDropdown","slot","status","id","planid","remainTime","time","_e","isPaused","title","visible","update:visible","name","domProps","step","dialog_selectTime","directives","rawName","cols","rows","input","target","composing","$set","dialog_Submit","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/3.17d3a0f07e38ce6727a5.js","sourcesContent":["<template>\r\n  <div class=\"plan\">\r\n    <el-container>\r\n      <el-header height=\"80px;\" class=\"header\">\r\n        <p>当前时间:{{currentTime | timePass}}</p>\r\n        <el-button type=\"primary\" @click=\"showAddTask=true\">添加新任务</el-button>\r\n        <el-form ref=\"elform\" :model=\"form\" :action=\"action\" method=\"post\">\r\n          <el-container class=\"query-wrap\">\r\n            <p>筛选条件</p>\r\n            <el-select v-model=\"query_options\" placeholder=\"全部\">\r\n              <el-option\r\n                v-for=\"item in options\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\">\r\n              </el-option>\r\n            </el-select>\r\n            <div class=\"block\">\r\n              <span class=\"demonstration\">筛选日期</span>\r\n              <el-date-picker v-model=\"selectedTime\" type=\"daterange\" align=\"right\" unlink-panels range-separator=\"至\" start-placeholder=\"开始日期\"\r\n                end-placeholder=\"结束日期\" :picker-options=\"pickerOptions2\">\r\n              </el-date-picker>\r\n            </div>\r\n            <el-button type=\"primary\" @click=\"actionQuery\">查询</el-button>\r\n          </el-container>\r\n        </el-form>\r\n      </el-header>\r\n      <el-main>\r\n        \r\n        <!-- :default-sort = \"{prop: 'startAt', order: 'ascending'}\" -->\r\n        <el-table align=\"center\" :data=\"tableData\" \r\n        :row-class-name=\"tableRowClassName\"\r\n        style=\"width: 100%\">\r\n        <el-table-column prop=\"status\" label=\"状态\" width=\"80\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"time\" label=\"投入时间（分）\" width=\"180\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"startAt\" label=\"开始时间\" width=\"180\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"stopAt\" label=\"暂停时间\" width=\"180\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"remainTime\" label=\"剩余时间（分)\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"endTime\" label=\"预计结束时间\">\r\n          </el-table-column>\r\n          <el-table-column prop=\"task\" label=\"任务内容\">\r\n          </el-table-column>\r\n          <el-table-column label=\"操作\">\r\n            <template slot-scope=\"scope\">\r\n              <el-dropdown @command=\"actionDropdown\">\r\n                <span class=\"el-dropdown-link\">\r\n                  编辑\r\n                  <i class=\"el-icon-arrow-down el-icon--right\"></i>\r\n                </span>\r\n                <el-dropdown-menu slot=\"dropdown\">\r\n                  <el-dropdown-item v-if=\"scope.row.status =='未开始'\" :command=\"{type:'startTask',id:scope.row.planid,remainTime:scope.row.time}\">开始任务</el-dropdown-item>\r\n                  <!-- <el-dropdown-item>终止任务</el-dropdown-item> -->\r\n                  <!-- <el-dropdown-item>设为完成</el-dropdown-item> -->\r\n                  <el-dropdown-item v-if=\"scope.row.status =='进行中' || scope.row.status =='暂停中'\" :command=\"{type:'stopTask',id:scope.row.planid,remainTime:scope.row.remainTime,isPaused:scope.row.isPaused}\">{{scope.row.isPaused?'继续任务':'停止任务'}}</el-dropdown-item>\r\n                  <el-dropdown-item v-if=\"scope.row.status !='未开始'\" :command=\"{type:'startTask',id:scope.row.planid,remainTime:scope.row.time}\">重置时间</el-dropdown-item>\r\n                  <el-dropdown-item v-if=\"scope.row.status !='进行中'\" :command=\"{type:'delTask',id:scope.row.planid}\">删除</el-dropdown-item>\r\n                  <!-- <el-dropdown-item divided>上方插入任务</el-dropdown-item> -->\r\n                  <!-- <el-dropdown-item>下方插入任务</el-dropdown-item> -->\r\n                </el-dropdown-menu>\r\n              </el-dropdown>\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-main>\r\n    </el-container>\r\n    <el-dialog title=\"添加任务\" :visible.sync=\"showAddTask\">\r\n      <el-form ref=\"elform\" :model=\"form\" :action=\"action\" method=\"post\">\r\n        <input type=\"hidden\" name=\"token\" :value=\"token\">\r\n        <el-form-item class=\"dialog-content\" label=\"投入时间\">\r\n          <el-input-number v-model=\"dialog_selectTime\" :step=\"15\"></el-input-number>\r\n          （单位：分钟）\r\n          <input type=\"hidden\" name=\"time\" :value=\"dialog_selectTime\">\r\n        </el-form-item>\r\n        <el-form-item label=\"任务内容\" class=\"dialog-content\">\r\n          <textarea v-model=\"form.task\" name=\"task\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\r\n        </el-form-item>\r\n        <el-form-item>\r\n          <el-button @click=\"showAddTask = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"dialog_Submit\">提 交</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nDate.prototype.Format = function(fmt)\r\n{ //author: meizz   \r\n  var o = {   \r\n    \"M+\" : this.getMonth()+1,                 //月份   \r\n    \"d+\" : this.getDate(),                    //日   \r\n    \"h+\" : this.getHours(),                   //小时   \r\n    \"m+\" : this.getMinutes(),                 //分   \r\n    \"s+\" : this.getSeconds(),                 //秒   \r\n    \"q+\" : Math.floor((this.getMonth()+3)/3), //季度   \r\n    \"S\"  : this.getMilliseconds()             //毫秒   \r\n  };   \r\n  if(/(y+)/.test(fmt))   \r\n    fmt=fmt.replace(RegExp.$1, (this.getFullYear()+\"\").substr(4 - RegExp.$1.length));   \r\n  for(var k in o)   \r\n    if(new RegExp(\"(\"+ k +\")\").test(fmt))   \r\n  fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));   \r\n  return fmt;   \r\n}\r\n// import HelloWorld from \"./components/HelloWorld\";\r\nimport {\r\n  IP,\r\n  ServerPort as PORT\r\n} from '@/api/env.js'\r\nexport default {\r\n  name: \"App\",\r\n  data() {\r\n    return {\r\n      currentTime: \"\",\r\n      isCollapse: true,\r\n      showAddTask:false,\r\n      dialog_selectTime:0,\r\n      selectedTime:[],\r\n      selectedTimeStmap:[],\r\n      tableData: [\r\n        // {\r\n        //   status:'',\r\n        //   planid:'',\r\n        //   time: 60,\r\n        //   startAt: \"未开始\",\r\n        //   stopAt:\"\" 暂停时间\r\n        //   remainTime: \"未开始\",\r\n        //   endTime: \"未开始\",\r\n        //   task: \"看书\"\r\n        //   isPaused：false 已暂停\r\n        // }\r\n      ],\r\n      form:{\r\n          time:\"\",\r\n          task:\"\"\r\n      },\r\n      token:\"\",\r\n      action:\"\",\r\n      query_options:0,\r\n      options: [{\r\n          value: 0,\r\n          label: '全部'\r\n        }, {\r\n          value: 1,\r\n          label: '开始时间'\r\n        }, {\r\n          value: 2,\r\n          label: '创建时间'\r\n        }],\r\n      pickerOptions2: {\r\n          shortcuts: [{\r\n            text: '最近一周',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }, {\r\n            text: '最近一个月',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }, {\r\n            text: '最近三个月',\r\n            onClick(picker) {\r\n              const end = new Date();\r\n              const start = new Date();\r\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n              picker.$emit('pick', [start, end]);\r\n            }\r\n          }]\r\n        },\r\n    };\r\n  },\r\n  filters: {\r\n    timePass: function(value) {\r\n      if (!value) return \"\";\r\n      let time = new Date(value); \r\n      let y = time.getFullYear() + \"\";\r\n      let m = time.getMonth() + 1 + \"\";\r\n      let m1 = m < 10 ? \"0\" + m : m;\r\n      let d = time.getDate() + \"\";\r\n      let d1 = d < 10 ? \"0\" + d : d;\r\n      let h = time.getHours() + \"\";\r\n      let h1 = h < 10 ? \"0\" + h : h;\r\n      let mm = time.getMinutes() + \"\";\r\n      let mm1 = mm < 10 ? \"0\" + mm : mm;\r\n      let s = time.getSeconds() + \"\";\r\n      let s1 = s < 10 ? \"0\" + s : s;\r\n      return y + \".\" + m1 + \".\" + d1 + \" \" + h1 + \":\" + mm1 + \":\" + s1;\r\n    }\r\n  },\r\n  methods: {\r\n    tableRowClassName({row, rowIndex}) {\r\n      \r\n        if(this.tableData[rowIndex].isPaused){\r\n          // console.log(this.tableData[rowIndex].time,this.tableData[rowIndex].isPaused)\r\n          return 'paused'\r\n        }else{\r\n          // console.log(this.tableData[rowIndex].time,this.tableData[rowIndex].isPaused)\r\n        }\r\n        if (this.tableData[rowIndex].remainTime > 0) {\r\n          return 'staring';\r\n        } \r\n        if (this.tableData[rowIndex].remainTime == 0) {\r\n          return 'ended';\r\n        }\r\n        return '';\r\n      },\r\n    refreshRemainTime(){\r\n      let now = (new Date()).getTime()\r\n      \r\n      this.tableData = this.tableData.map(item=>{\r\n        // let remainTime = item.endAt - now\r\n        let endAt = item.endAt\r\n        // let endAt = now + (remainTime * 60 * 1000)\r\n        // let endAt = \r\n        if(item.isPaused){\r\n          item.status = '暂停中'\r\n          \r\n          item.endTime = (new Date(endAt)).Format(\"yyyy-MM-dd hh:mm:ss\")\r\n          return item\r\n        }\r\n        if(!item.startAtTimestmap){\r\n          item.status = '未开始'\r\n          return item\r\n        }\r\n        item.status = '进行中'\r\n\r\n        // let startAt = item.startAtTimestmap\r\n        // let time = item.time\r\n\r\n        // let endAt = startAt + time * 60 * 1000\r\n\r\n        let remainMinu = Math.round((endAt - now) / 1000 / 60)\r\n        // remainTime--\r\n\r\n        item.endTime = (new Date(endAt)).Format(\"yyyy-MM-dd hh:mm:ss\")\r\n\r\n        if(isNaN(remainMinu) || remainMinu <=0){\r\n          item.status = '已结束'\r\n          remainMinu = 0\r\n        }\r\n        item.remainTime = remainMinu\r\n\r\n        return item\r\n      })\r\n    },\r\n\r\n    actionDropdown(command){\r\n      // console.log(command)\r\n      // this.api.plan.startTask({id})\r\n      switch (command.type) {\r\n        case \"startTask\":\r\n        // console.log(id)\r\n          this.api.plan.startTask({id:command.id,remainTime:command.remainTime}).then(()=>{\r\n            this.getPlanList()\r\n          })\r\n          break;\r\n        case \"stopTask\":\r\n          if(command.isPaused){\r\n            // 继续任务 \r\n            this.api.plan.resumeTask({id:command.id,remainTime:command.remainTime}).then(()=>{\r\n              this.getPlanList()\r\n            })\r\n          }\r\n          else{\r\n            this.api.plan.stopTask({id:command.id,remainTime:command.remainTime}).then(()=>{\r\n              this.getPlanList()\r\n            })\r\n          }\r\n          \r\n          break;\r\n        case \"delTask\":\r\n          this.api.plan.delTask({id:command.id}).then(()=>{\r\n              this.getPlanList()\r\n            })\r\n        break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    actionQuery(){\r\n      this.selectedTime = [this.getDayStart(this.selectedTime[0]),this.getDayEnd(this.selectedTime[1])]\r\n      this.getPlanList()\r\n    },\r\n    dialog_Submit(){\r\n      // this.submit()\r\n        // console.log(this.$refs.elform)\r\n        this.$refs.elform.$el.submit()\r\n        // this.form.time=\"\"\r\n        // this.form.task=\"\"\r\n        // this.showAddTask = false\r\n    },\r\n    eventPickChange(currentTime){\r\n        let afterTime = new Date(currentTime).getTime()\r\n        let nowTime = new Date().getTime()\r\n        console.log((afterTime - nowTime))\r\n        \r\n        let min = (afterTime - nowTime) / 1000 / 60\r\n        this.dialog_selectTime = Math.round(min,2)\r\n    },\r\n    actionAddTask(){\r\n        this.showAddTask = true\r\n    },\r\n    handleOpen(key, keyPath) {\r\n      console.log(key, keyPath);\r\n    },\r\n    handleClose(key, keyPath) {\r\n      console.log(key, keyPath);\r\n    },\r\n    \r\n    getPlanList(){\r\n      this.api.plan.getPlanList({\r\n        date_start:this.selectedTime[0],\r\n        date_end:this.selectedTime[1],\r\n        query_options:this.query_options\r\n      }).then(res=>{\r\n        let sortData = res.data\r\n\r\n        sortData = sortData.sort((a,b,c)=>{\r\n          let aCreateAt = (new Date(a.startAt)).getTime()\r\n          let bCreateAt = (new Date(b.startAt)).getTime()\r\n         if(isNaN(aCreateAt)){aCreateAt = 0}\r\n         if(isNaN(bCreateAt)){bCreateAt = 0}\r\n          \r\n\r\n          console.log(aCreateAt,bCreateAt)\r\n\r\n          return aCreateAt - bCreateAt\r\n        })\r\n        // console.log(sortData)\r\n        let cData = sortData.map((item)=>{\r\n          if(!item.startAt){\r\n            return item\r\n          }\r\n          item.startAtTimestmap = item.startAt\r\n          item.startAt = new Date(item.startAt).Format(\"yyyy-MM-dd hh:mm:ss\");  \r\n          item.stopAt = new Date(item.stopAt).Format(\"yyyy-MM-dd hh:mm:ss\");  \r\n          return item\r\n        })\r\n        this.tableData = cData\r\n        this.refreshRemainTime()\r\n      })\r\n    },\r\n    getDayStart(timestmap){\r\n      let time = new Date(timestmap).Format(\"yyyy-MM-dd\");  \r\n      let clearTime = (new Date(time+ \" 00:00:00\")).getTime()\r\n      return clearTime\r\n    },\r\n    getDayEnd(timestmap){\r\n      let time = new Date(timestmap).Format(\"yyyy-MM-dd\");  \r\n      let dayEnd = (new Date(time + \" 23:59:59\")).getTime()\r\n      return dayEnd\r\n    }\r\n  },\r\n  mounted() {\r\n    // this.api.plan.getPlanList()\r\n    // 加载列表\r\n    setInterval(() => {\r\n      this.currentTime = new Date();\r\n    }, 1000);\r\n    setInterval(() => {\r\n      this.refreshRemainTime()\r\n    }, 1000);\r\n    this.token = this.$store.state.token\r\n    this.action = IP + ':' + PORT + \"/add_plan\"\r\n\r\n    let now = new Date()\r\n    this.selectedTime = [this.getDayStart(now),this.getDayEnd(now)]\r\n\r\n    this.getPlanList()\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.plan .header {\r\n  text-align: left;\r\n  height: auto;\r\n}\r\n.el-dropdown-link {\r\n  color: #3f9eff;\r\n  cursor: pointer;\r\n}\r\n.dialog-content{\r\n    text-align: left;\r\n}\r\n.query-wrap{\r\n  margin-top: 20px;\r\n}\r\n.el-table tr.staring {\r\n    background-color: #f0f9eb;\r\n}\r\n.el-table tr.paused{\r\n  background-color: #fffbdc;\r\n}\r\n.el-table tr.ended {\r\n    background-color: #FF9800;\r\n    color: white;\r\n}\r\n.el-table tr.ended:hover td {\r\n    background-color: #ffbf60 !important;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/view/plan/index.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"plan\"},[_c('el-container',[_c('el-header',{staticClass:\"header\",attrs:{\"height\":\"80px;\"}},[_c('p',[_vm._v(\"当前时间:\"+_vm._s(_vm._f(\"timePass\")(_vm.currentTime)))]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.showAddTask=true}}},[_vm._v(\"添加新任务\")]),_vm._v(\" \"),_c('el-form',{ref:\"elform\",attrs:{\"model\":_vm.form,\"action\":_vm.action,\"method\":\"post\"}},[_c('el-container',{staticClass:\"query-wrap\"},[_c('p',[_vm._v(\"筛选条件\")]),_vm._v(\" \"),_c('el-select',{attrs:{\"placeholder\":\"全部\"},model:{value:(_vm.query_options),callback:function ($$v) {_vm.query_options=$$v},expression:\"query_options\"}},_vm._l((_vm.options),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})})),_vm._v(\" \"),_c('div',{staticClass:\"block\"},[_c('span',{staticClass:\"demonstration\"},[_vm._v(\"筛选日期\")]),_vm._v(\" \"),_c('el-date-picker',{attrs:{\"type\":\"daterange\",\"align\":\"right\",\"unlink-panels\":\"\",\"range-separator\":\"至\",\"start-placeholder\":\"开始日期\",\"end-placeholder\":\"结束日期\",\"picker-options\":_vm.pickerOptions2},model:{value:(_vm.selectedTime),callback:function ($$v) {_vm.selectedTime=$$v},expression:\"selectedTime\"}})],1),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.actionQuery}},[_vm._v(\"查询\")])],1)],1)],1),_vm._v(\" \"),_c('el-main',[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"align\":\"center\",\"data\":_vm.tableData,\"row-class-name\":_vm.tableRowClassName}},[_c('el-table-column',{attrs:{\"prop\":\"status\",\"label\":\"状态\",\"width\":\"80\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"time\",\"label\":\"投入时间（分）\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"startAt\",\"label\":\"开始时间\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"stopAt\",\"label\":\"暂停时间\",\"width\":\"180\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"remainTime\",\"label\":\"剩余时间（分)\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"endTime\",\"label\":\"预计结束时间\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"task\",\"label\":\"任务内容\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-dropdown',{on:{\"command\":_vm.actionDropdown}},[_c('span',{staticClass:\"el-dropdown-link\"},[_vm._v(\"\\n                编辑\\n                \"),_c('i',{staticClass:\"el-icon-arrow-down el-icon--right\"})]),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[(scope.row.status =='未开始')?_c('el-dropdown-item',{attrs:{\"command\":{type:'startTask',id:scope.row.planid,remainTime:scope.row.time}}},[_vm._v(\"开始任务\")]):_vm._e(),_vm._v(\" \"),(scope.row.status =='进行中' || scope.row.status =='暂停中')?_c('el-dropdown-item',{attrs:{\"command\":{type:'stopTask',id:scope.row.planid,remainTime:scope.row.remainTime,isPaused:scope.row.isPaused}}},[_vm._v(_vm._s(scope.row.isPaused?'继续任务':'停止任务'))]):_vm._e(),_vm._v(\" \"),(scope.row.status !='未开始')?_c('el-dropdown-item',{attrs:{\"command\":{type:'startTask',id:scope.row.planid,remainTime:scope.row.time}}},[_vm._v(\"重置时间\")]):_vm._e(),_vm._v(\" \"),(scope.row.status !='进行中')?_c('el-dropdown-item',{attrs:{\"command\":{type:'delTask',id:scope.row.planid}}},[_vm._v(\"删除\")]):_vm._e()],1)],1)]}}])})],1)],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"添加任务\",\"visible\":_vm.showAddTask},on:{\"update:visible\":function($event){_vm.showAddTask=$event}}},[_c('el-form',{ref:\"elform\",attrs:{\"model\":_vm.form,\"action\":_vm.action,\"method\":\"post\"}},[_c('input',{attrs:{\"type\":\"hidden\",\"name\":\"token\"},domProps:{\"value\":_vm.token}}),_vm._v(\" \"),_c('el-form-item',{staticClass:\"dialog-content\",attrs:{\"label\":\"投入时间\"}},[_c('el-input-number',{attrs:{\"step\":15},model:{value:(_vm.dialog_selectTime),callback:function ($$v) {_vm.dialog_selectTime=$$v},expression:\"dialog_selectTime\"}}),_vm._v(\"\\n        （单位：分钟）\\n        \"),_c('input',{attrs:{\"type\":\"hidden\",\"name\":\"time\"},domProps:{\"value\":_vm.dialog_selectTime}})],1),_vm._v(\" \"),_c('el-form-item',{staticClass:\"dialog-content\",attrs:{\"label\":\"任务内容\"}},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form.task),expression:\"form.task\"}],attrs:{\"name\":\"task\",\"id\":\"\",\"cols\":\"30\",\"rows\":\"10\"},domProps:{\"value\":(_vm.form.task)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form, \"task\", $event.target.value)}}})]),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{on:{\"click\":function($event){_vm.showAddTask = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.dialog_Submit}},[_vm._v(\"提 交\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4bd7d281\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/view/plan/index.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4bd7d281\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./index.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4bd7d281\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./index.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/plan/index.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}